/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  3.0.1                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       polyBoundaryMesh;
    location    "constant/polyMesh";
    object      boundary;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

12
(
    movingWall
    {
        type            wall;
        inGroups        1(wall);
        nFaces          0;
        startFace       300;
    }
    CPLReceiveMD
    {
        type            patch;
        nFaces          0;
        startFace       300;
    }
    streamwiseIn
    {
        type            cyclic;
        inGroups        1(cyclic);
        nFaces          0;
        startFace       300;
        matchTolerance  0.0001;
        transform       unknown;
        neighbourPatch  streamwiseOut;
    }
    streamwiseOut
    {
        type            cyclic;
        inGroups        1(cyclic);
        nFaces          0;
        startFace       300;
        matchTolerance  0.0001;
        transform       unknown;
        neighbourPatch  streamwiseIn;
    }
    front
    {
        type            cyclic;
        inGroups        1(cyclic);
        nFaces          0;
        startFace       300;
        matchTolerance  0.0001;
        transform       unknown;
        neighbourPatch  back;
    }
    back
    {
        type            cyclic;
        inGroups        1(cyclic);
        nFaces          0;
        startFace       300;
        matchTolerance  0.0001;
        transform       unknown;
        neighbourPatch  front;
    }
    procBoundary5to2
    {
        type            processor;
        inGroups        1(processor);
        nFaces          25;
        startFace       300;
        matchTolerance  0.0001;
        transform       unknown;
        myProcNo        5;
        neighbProcNo    2;
    }
    procBoundary5to3throughstreamwiseOut
    {
        type            processorCyclic;
        inGroups        1(processorCyclic);
        nFaces          25;
        startFace       325;
        matchTolerance  0.0001;
        transform       unknown;
        myProcNo        5;
        neighbProcNo    3;
        referPatch      streamwiseOut;
    }
    procBoundary5to4
    {
        type            processor;
        inGroups        1(processor);
        nFaces          25;
        startFace       350;
        matchTolerance  0.0001;
        transform       unknown;
        myProcNo        5;
        neighbProcNo    4;
    }
    procBoundary5to8
    {
        type            processor;
        inGroups        1(processor);
        nFaces          25;
        startFace       375;
        matchTolerance  0.0001;
        transform       unknown;
        myProcNo        5;
        neighbProcNo    8;
    }
    procBoundary5to14
    {
        type            processor;
        inGroups        1(processor);
        nFaces          25;
        startFace       400;
        matchTolerance  0.0001;
        transform       unknown;
        myProcNo        5;
        neighbProcNo    14;
    }
    procBoundary5to23throughfront
    {
        type            processorCyclic;
        inGroups        1(processorCyclic);
        nFaces          25;
        startFace       425;
        matchTolerance  0.0001;
        transform       unknown;
        myProcNo        5;
        neighbProcNo    23;
        referPatch      front;
    }
)

// ************************************************************************* //
