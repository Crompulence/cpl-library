# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  test:
    runs-on: ubuntu-20.04
            
    steps:
          
      - name: Update repo
        run: sudo apt-get update -y 
        
      - name: Install mpich
        run: sudo apt-get install -y mpich   
        
      - name: Install valgrind
        run: sudo apt-get install -y valgrind
     
      - name: Update pip
        run: python -m pip install --upgrade pip

      - name: Install pytest
        run: pip install pytest
          
      - name: Install mpi4py
        run: pip install mpi4py

      - name: Install scientific packages
        run: pip install numpy scipy matplotlib

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        
      - name: Build cpl-library
        run: |
          ls ./
          make
          ls ./lib/
          
      - name: Initialisation test
        if: always()
        run: |
          source SOURCEME.sh
          make test-pytest-initialisation

      - name: Mapping test
        if: always()
        run: |
          source SOURCEME.sh
          make test-pytest-mapping  
        
      - name: Examples test
        if: always()
        run: |
          source SOURCEME.sh
          make test-examples
        
      - name: memory test
        if: always()
        run: |
          source SOURCEME.sh
          make test-valgrind
        
      - name: Field/Force test
        if: always()
        run: |
          source SOURCEME.sh
          make test-gtests
        
      - name: Drag model test
        if: always()
        run: |
          source SOURCEME.sh
          make test_Dragmodels
                
